#!/bin/sh

OS=`uname`

if [ "${OS}" = "FreeBSD" ]
then
  CC=gcc48
  MAKE_CMD=gmake
else
  CC=gcc
  MAKE_CMD=make
fi

MM_TYPE="${MM_TYPE:-b2bua}"
MM_BRANCH="${MM_BRANCH:-master}"
RTPPC_TYPE="${RTPPC_TYPE:-udp}"

BASEDIR="${BASEDIR:-$(dirname -- $0)}"
BASEDIR="$(readlink -f -- $BASEDIR)"

BUILDDIR="${BUILDDIR:-${BASEDIR}}"

RTPPROXY=${BUILDDIR}/dist/rtpproxy/src/rtpproxy_debug
RTPP_SOCK_UDP="udp:127.0.0.1:22222"
RTPP_SOCK_UNIX="unix:${BASEDIR}/rtpproxy.sock"
RTPP_SOCK_CUNIX="cunix:${BASEDIR}/rtpproxy.csock"
RTPP_SOCK_UDP6="udp6:::1:22222"

if [ "${RTPPC_TYPE}" = "udp" ]
then
  RTPP_SOCK_TEST="${RTPP_SOCK_UDP}"
fi
if [ "${RTPPC_TYPE}" = "udp6" ]
then
  RTPP_SOCK_TEST="${RTPP_SOCK_UDP6}"
fi
if [ "${RTPPC_TYPE}" = "unix" ]
then
  RTPP_SOCK_TEST="${RTPP_SOCK_UNIX}"
fi
if [ "${RTPPC_TYPE}" = "cunix" ]
then
  RTPP_SOCK_TEST="unix:${BASEDIR}/rtpproxy.csock"
fi

forcefail() {
  RC=${1}
  if [ ${RC} -eq 0 ]
  then
    echo >&2 "ALERT, forcefail() called with the bogus 0 RC!"
    ${RC}=1
  fi
  shift
  echo >&2 "FAILED: (rc=${RC})" "${@}"
  if [ -n "$CONTINUE" ] ; then
    return
  fi
  if [ -n "$INTERACTIVE" ] ; then
    read -p "Continue? (y/n)" YN
    if [ "$YN" != 'y' ] ; then
      exit $RC
    fi
  else
    exit $RC
  fi
}

fail() {
  RC=$?
  echo >&2 "FAILED: (rc=$RC)" "$@"
  if [ -n "$CONTINUE" ] ; then
    return
  fi
  if [ -n "$INTERACTIVE" ] ; then
    read -p "Continue? (y/n)" YN
    if [ "$YN" != 'y' ] ; then
      exit $RC
    fi
  else
    exit $RC
  fi
}

ok() {
  echo >&2 "OK:" "$@"
}

ok() {
  echo >&2 "OK:" "$@"
}

report_rc() {
  RC=${1}
  shift
  if [ ${RC} -eq 0 ]
  then
    ok "${@}"
  else
    fail "${@}"
  fi
}

report() {
  RC=${?}
  report_rc ${RC} "${@}"
}

reportifnotfail() {
  RC=$?
  if [ "$RC" = 0 ]
  then
    false
    fail "$@"
  else
    true
    ok "$@"
  fi
}
