#!/bin/sh

OS=`uname`

if [ "${OS}" = "FreeBSD" ]
then
  CC=gcc48
  MAKE_CMD=gmake
else
  CC=gcc
  MAKE_CMD=make
fi

MM_TYPE="${MM_TYPE:-b2bua}"
MM_BRANCH="${MM_BRANCH:-master}"
RTPPC_TYPE="${RTPPC_TYPE:-udp}"

BASEDIR="${BASEDIR:-$(dirname -- $0)}"
BASEDIR="$(readlink -f -- $BASEDIR)"

BUILDDIR="${BUILDDIR:-${BASEDIR}}"

RTPPROXY_DIST="${BUILDDIR}/dist/rtpproxy"
RTPPROXY=${RTPPROXY_DIST}/src/rtpproxy_debug
RTPP_SOCK_BARE="${BASEDIR}/rtpproxy.sock"
RTPP_SOCK_UDP="udp:127.0.0.1:22222"
RTPP_SOCK_UNIX="unix:${RTPP_SOCK_BARE}"
RTPP_SOCK_CUNIX="cunix:${BASEDIR}/rtpproxy.csock"
RTPP_SOCK_UDP6="udp6:::1:22222"
RTPP_SOCK_TCP="tcp:127.0.0.1:22222"
RTPP_SOCK_TCP6="tcp6:::1:22222"

fail_rc() {
  RC=${1}
  shift
  echo >&2 "FAILED: (rc=$RC)" "$@"
  if [ -n "$CONTINUE" ] ; then
    return
  fi
  if [ -n "$INTERACTIVE" ] ; then
    read -p "Continue? (y/n)" YN
    if [ "$YN" != 'y' ] ; then
      exit $RC
    fi
  else
    exit $RC
  fi
}

case "${RTPPC_TYPE}" in
  "udp")   RTPP_SOCK_TEST="${RTPP_SOCK_UDP}";;
  "udp6")  RTPP_SOCK_TEST="${RTPP_SOCK_UDP6}";;
  "unix")  RTPP_SOCK_TEST="${RTPP_SOCK_UNIX}";;
  "cunix") RTPP_SOCK_TEST="${RTPP_SOCK_CUNIX}";;
  "tcp")   RTPP_SOCK_TEST="${RTPP_SOCK_TCP}";;
  "tcp6")  RTPP_SOCK_TEST="${RTPP_SOCK_TCP6}";;
  *)       fail_rc 1 "Unknown socket type RTPPC_TYPE=${RTPPC_TYPE}";;
esac

MM_INIT_DELAY=1
RTPP_STAT_TIMEOUT=$((36 + ${MM_INIT_DELAY}))
ALICE_TIMEOUT=45
BOB_TIMEOUT=45
TEST_SET="alice_1,alice_2,alice_3,alice_4,alice_5,alice_6,alice_7,alice_8,alice_9,alice_10,alice_early_cancel"

if [ "${MM_TYPE}" = "b2bua" ]
then
  MM_SOCK="unix:${BASEDIR}/b2bua.sock"
  # Python b2bua needs slightly more time to init everything
  MM_INIT_DELAY=4
  RTPP_STAT_TIMEOUT=$((55 + ${MM_INIT_DELAY}))
  ALICE_TIMEOUT=90
  BOB_TIMEOUT=90
  TEST_SET="${TEST_SET},alice_11,alice_12,alice_13,alice_14,alice_early_cancel_lost100"
fi

if [ "${MM_TYPE}" = "opensips" -a "${MM_BRANCH}" = "1.11" ]
then
  TEST_SET="${TEST_SET},alice_early_cancel_lost100"
fi

forcefail() {
  RC=${1}
  if [ ${RC} -eq 0 ]
  then
    echo >&2 "ALERT, forcefail() called with the bogus 0 RC!"
    ${RC}=1
  fi
  shift
  fail_rc "${RC}" "${@}"
}

fail() {
  RC=$?
  fail_rc "${RC}" "${@}"
}

ok() {
  echo >&2 "OK:" "$@"
}

report_rc_log() {
  RC=${1}
  FAIL_LOGFILES="${2}"
  shift 2
  if [ ${RC} -eq 0 ]
  then
    ok "${@}"
  else
    for logf in ${FAIL_LOGFILES}
    do
      grep -v 'DBUG:main:GLOBAL:' "${logf}" | grep -v 'DBUG:rtpp_proc_async_run:GLOBAL:' >&2
    done
    fail_rc "${RC}" "${@}"
  fi
}

report_rc() {
  RC=${1}
  shift
  if [ ${RC} -eq 0 ]
  then
    ok "${@}"
  else
    fail_rc "${RC}" "${@}"
  fi
}

report() {
  RC=${?}
  report_rc ${RC} "${@}"
}

reportifnotfail() {
  RC=$?
  if [ "$RC" = 0 ]
  then
    fail_rc 1 "$@"
  else
    true
    ok "$@"
  fi
}
